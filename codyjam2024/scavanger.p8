pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-- scavenger
-- by brandon - music by nathan
--

-- init -------------------------------------------------------------------------
function _init()
	debug = nil

poke(0x5f5c,255) -- set the btnp to not loop
poke(0x5f5d,255) -- 

-- i


score = 0 



	-- set the sprites array
	sprite_timer = 0
	sprites = {}

g = ghost:new(pix(6),pix(4))
add(sprites,g)

add(sprites,stats)



	screen_swipe = false

	-- create the player
	player:init(4*8,4*8)
	player.movement_speed = 1.5
	player.movement_max_speed = 1.5

	loot.count	= 3


	take_off_timer:init()


	-- move the camera 
	camera_offset = {}
	camera(camera_offset.x,camera_offset.y)

	add(sprites,player)
	add(sprites,take_off_timer)

	coin = loot:create(2*8,2*8)

	cls()
end



-- _update -------------------------------------------------------------------------
function _update()

	-- play track one
	if not stat(57) then
		music(0)
	end


	if screen_swipe or ship:update()
		then return end



 -- handle the camera
	set_map_camera()




	-- update the game stats
	take_off_timer:update()

	-- update player movement
	player:move()
	loot:update()

	player:update()

	for s in all(sprites) do
		s:update()
	end

end


--	_draw -------------------------------------------------------------------------
function _draw()
	-- increment the sprite timer



	
	if swipe() or ship:draw() then
		return
	end
	cls()



	-- draw the map
	camera(camera_offset.x,camera_offset.y)
	map()

	room:draw()



	-- draw the sprites
	sprite_timer += 1
	for s in all(sprites) do
		s:draw()
	end



	if debug != nil then
		rectfill(camera_offset.x,camera_offset.y,camera_offset.x+pix(16),camera_offset.y +pix(1),0)
		print(debug,camera_offset.x,camera_offset.y,7)
	end

end




-->8
--updates
--
function get_dir() 
	-- get the direction the player is moving
	x =	0
	y = 0
	if btn(0) then
		x	+= -1
	end
	if btn(1) then
		x += 1
	end
	if btn(2) then
		y += -1
	end
	if  btn(3) then
		y += 1
	end
	return {x,y}
end


function get_tile(x,y)
	-- get the tile at the x,y position
	return mget(flr(x/8),flr(y/8))
end

function is_wall(x,y)
	-- check if the tile is a wall
	return fget(get_tile(x,y),0)
end

function is_door(x,y)
	-- check if the tile is a door
	return fget(get_tile(x,y),1)
end

function is_drop_off(x,y)
	-- check if the tile is a drop off
	return fget(get_tile(x,y),2)
end




-- check where the player location is and deal with it
function set_map_camera()
	-- check if room is 2 
	if room.map[room.y][room.x] == 2 then
		-- draw the room
		if player.x < 200 then
			-- squig
		player.x += outside_map.x*8
		player.y += outside_map.y*8
		camera_offset.x += outside_map.x*8
		camera_offset.y += outside_map.y*8
		return
	end
	else
		camera_offset.x = -24
		camera_offset.y = -16
	end
end


-- loot -------------------------------------------------------------------------
loot = {
	loot_list = { --- loot ids
		{224,225,226,227}, -- 1
		{208},--- 2
		{209}, -- 3
		{210},	-- 4
		{211} -- 5
	}
}

loot.count = 0
loot.last_drop = 0

function loot:drop(amount, save_loot,x,y)
	save_loot = save_loot or false
	_x	= x or player.last_dir[1]*-1 
	_y	= y or player.last_dir[2]*-1 

	amount = amount or 1
	if self.count > 0 and time() - loot.last_drop  > 0.01 then
		self.count -= amount
		-- # create the loot
		if	save_loot then
			score += amount
		else
			l = loot:create(player.x+pix(_x),player.y+pix(_y))
		end
		loot.last_drop = time()
		return true
	end
end



function loot:pickup(amount)
	amount = amount or 1
	self.count += amount
end
function loot:draw(_x,_y)
	print("loot: " .. self.count,_x,_y,7)
end

-- calculate the weight of the player
function loot:update()
	player.movement_speed =  ((player.movement_max_speed*10 - self.count)	/ 10)
end

-- create loot in x,y
function loot:create(x,y,sprite_id,room_x,room_y)
	sprite_id = sprite_id or (flr(rnd(4))+1)
	s = loot_meta.new(x,y)
	s.active_sprite	= self.loot_list[sprite_id]
	s.room = {}
	s.room.x	=	room_x or room.x
	s.room.y	=	room_y	or room.y
	s.time_drop = time()
	add(sprites,s)
	return s
end



-- check hit box -------------------------------------------------------------------------
function check_hit_box(x1,y1,w1,h1,x2,y2,w2,h2)
	-- check if the two hit boxes are colliding
	if x1 < x2 + w2 and
		x1 + w1 > x2 and
		y1 < y2 + h2 and
		y1 + h1 > y2 then
		return true
	end
	return false
end

function is_player(x,y)
	-- check if the player is at the x,y position
	return check_hit_box(player.x,player.y,player.w,player.h,x,y,8,8)
end




function swipe()


	if screen_swipe then
		screen_swipe_index += 4
		if screen_swipe_index < 8*8 then
			rectfill(camera_offset.x,camera_offset.y+8,camera_offset.x+8 + screen_swipe_index,camera_offset.y + 12*8,0)
			-- from oposite side
			rectfill(camera_offset.x+16*8 - screen_swipe_index,camera_offset.y+8,camera_offset.x+16*8,camera_offset.y + 12*8,0)
			--	from top
			rectfill(camera_offset.x,camera_offset.y+8,camera_offset.x+16*8,camera_offset.y + 8 + screen_swipe_index,0)
			-- from bottom
			rectfill(camera_offset.x,camera_offset.y+12*8 - screen_swipe_index,camera_offset.x+16*8,camera_offset.y + 12*8,0)
		else
			screen_swipe = false
			screen_swipe_index = 0
			set_map_camera()
			room:draw()
		end
	else
		screen_swipe_index = 0
	end

	return screen_swipe
end



function pix(x)
	return x*8
end


function same_room(x,y)
	return room.x == x and room.y == y
end













-->8
--classes


-- node class	-------------------------------------------------------------------------
node_metatable = {}
node_metatable.__index = node_metatable

function node_metatable:update()

end
function node_metatable:draw()

end







-- sprites class -------------------------------------------------------------------------

sprite_metatable = {
	x = 0,
	y = 0,
	w = 8,
	h = 8,
	flip = false,
	ani_speed = 15,
	sprites = {240,241},
	active_sprite = {240,241}
}
sprite_metatable.__index = sprite_metatable
setmetatable(sprite_metatable,sprite_metatable)

--	create a new sprite
function sprite_metatable.new(x,y,w,h,flip,ani_speed,sprites)
	local s = {}
	setmetatable(s,sprite_metatable)
	s.x = x
	s.y = y
	s.w = w
	s.h = h
	s.flip = flip
	s.ani_speed = ani_speed
	s.sprites = sprites
	s.active_sprite = sprites
	return s
end

--	draw the sprite
function sprite_metatable:draw()
	spr(self.active_sprite[flr(sprite_timer / self.ani_speed) % #self.active_sprite +1], ceil(self.x), ceil(self.y), self.w/8, self.h/8,self.flip)
end

function sprite_metatable:remove()
	del(sprites,self)
end

function sprite_metatable:update()
end

-- enemy class	-------------------------------------------------------------------------
enemy_meta = {
	x = 0,
	y = 0,
	w = 8,
	h = 8,
	speed	= 0.25,
	ani_speed = 5,
	active_sprite = {240,241},
	sprites = {240,241},
	health = 1,
	dmg = 1,
	room = {x = 0, y = 0},
	dead = false,
	dir = {
		x	= 0,
		y	= 0
	}
}
setmetatable(enemy_meta,sprite_metatable)
enemy_meta.__index = enemy_meta

function enemy_meta:new(x,y,dmg,room_x,room_y,sprites)
	local e = {}
	setmetatable(e,enemy_meta)
	e.x = x
	e.y = y
	e.sprites = sprites or self.sprites
	e.active_sprite = sprites or	self.sprites
	e.dmg	= dmg or self.dmg
	e.room = {}
	e.room.x = room_x or room.x
	e.room.y = room_y or room.y
	return e
end

function enemy_meta:update()
	if not same_room(self.room.x,self.room.y) then
		return
	end
	self:move()
	if(is_player(self.x,self.y)) then
		player:hit(self.dmg,self.dir.x,self.dir.y)
	end
	if self.dead then
		self:remove()
	end
end

function enemy_meta:draw()
	if	not same_room(self.room.x,self.room.y) then
		return
	end

	spr(self.active_sprite[flr(sprite_timer / self.ani_speed) % #self.active_sprite +1], ceil(self.x), ceil(self.y), self.w/8, self.h/8,false)
end



function enemy_meta:move()
	if player.x < self.x then
		self.x -= 1*	self.speed
		self.dir.x = -1
	end
	if player.x > self.x then
		self.x += 1*	self.speed
		self.dir.x = 1
	end
	if player.y < self.y then
		self.y -= 1*	self.speed
		self.dir.y = -1
	end
	if player.y > self.y then
		self.y += 1*	self.speed
		self.dir.y = 1
	end
end

-- diffrent types of enenmies
ghost = {
	sprites = {229},
	active_sprite = {229},
}
setmetatable(ghost,enemy_meta)
ghost.__index = ghost














































--- loot item  class	-------------------------------------------------------------------------
loot_meta = {
	x = 0,
	y = 0,
	w = 8,
	h = 8,
	ani_speed = 5,
	active_sprite = {224,225,226,227},
	amount = 1,
	time_drop = 0
}

-- inherit from sprite
setmetatable(loot_meta,sprite_metatable)
loot_meta.__index = loot_meta


function loot_meta.new(x,y,amount, room_x ,room_y, sprites)
	local l = {}
	setmetatable(l,loot_meta)
	l.x = x
	l.y = y
	l.amount = amount or 1
	l.sprites = sprites 
	l.active_sprite = sprites
	l.room = {}
	l.room.x = room_x or	room.x
	l.room.y = room_y or	room.y
	return l
end




function loot_meta:update()

	if self.room.x != room.x or self.room.y != room.y then return end

	if time()	- self.time_drop < 0.5 then return end

	for i = -1,1	do
		for j = -1,1	do
			if is_player(self.x + i,self.y + j) then
				
				loot:pickup(self.amount)
				self:remove()
				return
			end
		end
	end

	if is_player(self.x,self.y) then
		loot:pickup(self.amount)
		self:remove()
	end
end

function loot_meta:remove()
	del(sprites,self)
end

function loot_meta:draw()
	if self.room.x != room.x or self.room.y != room.y then
		return
	end
	spr(self.active_sprite[flr(sprite_timer / self.ani_speed) % #self.active_sprite +1], ceil(self.x), ceil(self.y), self.w/8, self.h/8)
end







-- player class -------------------------------------------------------------------------

player = sprite_metatable.new(0,0,8,8,false,15,{240,241})
player.movement_speed = 1

player.idle = {240,241}
player.walk = {242,243}

function player:init(x,y)
	self.x = x
	self.y = y
	self.last_dir = {0,0}
	self.flip = false
	self.dead = false
end

function player:update()
	-- check if action button is pressed
	if btnp(5) then 
		loot:drop(1)
	end
end





function player:move(x,y)
	local dir = get_dir()
	if (x != nil and y != nil) then
		dir = {x,y}
		self.speed = 6
	end

	-- get the future x,y position
	x_to,	y_to = self.x,self.y



	-- the 4 is used to center the sprite i use it instead of a var to save data

	if dir[1] <	0 then
		x_to = self.x + dir[1] * self.movement_speed
	elseif dir[1] > 0 then
		x_to = self.x + dir[1] * self.movement_speed + self.w
	else 
		x_to = self.x + 4
	end

	if	dir[2] <	0 then
		y_to = self.y + dir[2] * self.movement_speed
	elseif dir[2] > 0 then
		y_to = self.y + dir[2] * self.movement_speed + self.h
	else
		y_to = self.y + 4
	end


	-- check for colisions with doors
	if	is_door( x_to,y_to) then
		-- set swipe flag
		screen_swipe = true

		-- check that the dir is not diagonal
		if dir[1] != 0 and dir[2] != 0 then

			t = get_tile(x_to,y_to)
			if t == 4 or t == 5 then
				dir[2] = 0
			else
				dir[1] = 0
			end
		end
		




		-- set the player position to the oposite door
		tile_width = 8
		if dir[1] < 0 then --	left
			self.x = room.w * 8 - self.w -	tile_width
		elseif dir[1] > 0 then	--	right
			self.x = 0 + tile_width
		elseif dir[2] < 0 then	--	up
			self.y = room.h * 8 - self.h -	tile_width
		elseif dir[2] > 0 then --	down
			self.y = 0 + tile_width
		end

		if room.map[room.y][room.x] == 2 then

			-- play the door sound
			-- open the door
			-- play the door open sound
			self.x -=	outside_map.x*8

		end
		--
		-- play the door sound
		-- open the door
		-- play the door open sound

		room:move(dir[1],dir[2])
		return
	end


	if is_drop_off(	x_to,y_to) then
		ship.inside	= true
	end

	-- check for colisions with walls
	if	is_wall( x_to,y_to)  then
		dir = {0,0}
		-- play the wall sound
	end




	--	check if the player is moving
	if dir[1] != 0 or dir[2] != 0 then
		if (self.active_sprite != self.walk) then
			--set the player to the walk animation
			self.active_sprite = self.walk
			self.ani_speed = 5
		end


		self.x += dir[1] *	self.movement_speed
		self.y += dir[2] *	self.movement_speed

		-- prevent coblestoning
		if (dir[1] != 0 and dir[2] != 0) and (self.last_dir[1] != dir[1]  or self.last_dir[2] != dir[2]) then
			self.x = flr(self.x) +0.5
			self.y = flr(self.y) +0.5
		end


		-- set the last direction
		if(dir[1] != 0) then
			self.last_dir[1] = dir[1]
		end
		if(dir[2] != 0) then
			self.last_dir[2] = dir[2]
		end


		-- set the flip
		if self.last_dir[1] == 1 then
			self.flip = false
		elseif self.last_dir[1] == -1 then
			self.flip = true
		end

		-- if the	player is not moving
	else
		-- set the player to the idle animation
		self.active_sprite = self.idle
		self.ani_speed = 15
	end
end

function player:hit(dmg,x,y)
	self:move(x,y)

	if loot.count == 0 then
		self.dead = true
		return
	end

	for	i = 1, dmg do
		loot:drop(1,false,x,y)
	end
end



-- room class -------------------------------------------------------------------------------
room = {}
room.x = 5
room.y = 7
room.w = 9
room.h = 7
room.map =	{
	{0,0,0,0,0,2,0,0,0},
	{0,0,0,0,1,1,0,0,0},
	{0,0,0,0,1,0,0,0,0},
	{0,1,1,1,1,0,0,0,0},
	{0,1,0,0,1,1,1,1,0},
	{0,1,1,1,2,1,0,1,0},
	{0,0,0,0,1,1,0,0,0}
}



outside_map = {}
outside_map.x = 30
outside_map.y = 9



function room:draw()
	-- draw the room
	x = self.x
	y = self.y




	-- set the walls to smooth
	mset(flr(self.w/2),0,1)
	mset(flr(self.w/2),self.h-1,1)
	mset(self.w-1,flr(self.h/2),1)
	mset(0,flr(self.h/2),1)


	-- set the top door
	if  y-1 > 0 then
		if self.map[y-1][x] != 0 then
			mset(flr(self.w/2),0,3)
		end
	end

	-- set the bottom door
	if y+1 <= self.h then
		if self.map[y+1][x] == 1 then
			mset(flr(self.w/2),self.h-1,2)
		end
	end

	--set right door
	if x+1 <= self.w then
		if self.map[y][x+1] == 1 then
			mset(self.w-1,flr(self.h/2),5)
		end
	end

	--	set left door
	if	x-1 > 0 then
		if self.map[y][x-1] == 1 then
			mset(0,flr(self.h/2),4)
		end
	end

	// the last draw call
	
end


function room:move(dir_x,dir_y)
	-- add the x and y to the room
	if self.map[self.y][self.x] == 2 then
		-- add stuff here latter

	end

	self.x += dir_x
	self.y += dir_y
end

-- dungeon timer class ---------------------------------------------------------------

-- time in dungeon  variables
take_off_timer = {}
setmetatable(take_off_timer,node_metatable)
take_off_timer.start_time	= 0
take_off_timer.duration = 120
take_off_timer.start = function()
	take_off_timer.start_time = time()
end

function take_off_timer:init()
	self.elapsed_time = 0
	self.remaining_time = self.duration
	self.start()
end

function take_off_timer:update()
	self.elapsed_time = time() - self.start_time 
	self.remaining_time = self.duration - self.elapsed_time
	if self.remaining_time <= 0 then
		gameover = true

	end
end


-- stats class	-----------------------------------------------------------------------

stats = {}
setmetatable(stats,node_metatable)

function stats:draw()
	_weight = loot.count *5
	_time = take_off_timer.remaining_time
	_score = score
	_x = camera_offset.x
	_y = camera_offset.y
	rectfill(_x,_y,_x+pix(15),_y+pix(2)-6,0)
	rect(_x,_y,_x+pix(15),_y+pix(2)-6,2)

	t = take_off_timer.duration

	-- check	the time
	if _time > t/2	then
		_color = 3 -- green
	elseif _time > t/3 then
		_color = 10	-- yellow
		else
		_color = 8	-- red
	end


	_time = flr(_time/60)..":"..flr(_time % 60)


	print("time to take off: ",_x+ pix(2),_y+3,7)
	print(_time,_x+ pix(11),_y+3,_color)

	


	-- check the weight
	if _weight < 5*5 then
		_color = 3 -- green
	elseif _weight < 5*8 then
		_color = 10	-- yellow
		else
		_color = 8	-- red
	end

  -- draw 
	_y = camera_offset.y + pix(12) +1
	-- draw a rectangle
	rectfill(_x,_y,_x+pix(15),_y+pix(2),0)
	rect(_x,_y,_x+pix(15),_y+pix(2),1)
	-- print the stats
	_y += 6

	print("weight: ".._weight.." lb",_x+ pix(1),_y,_color)
	print("on ship: ".. _score,_x+ pix(9),_y,7)

end


--- ship class -----------------------------------------------------------------------


ship	= {}
setmetatable(ship,node_metatable)

ship.inside = false
ship.index= 0
ship.leave = false


function ship:update()

	if self.leave then
		self.inside = false
		self.leave = false
		self.index = 0
	end



	if self.inside then
		if	btnp(2) then
			self.index +=1
		elseif  btnp(3) then
			self.index -=1
		elseif	btnp(5) then
			self.leave = true
		elseif btnp(4) and self.index == 0 then
			-- add the score
			score += loot.count
			-- reset the loot
			loot.count = 0

			loot:drop(self.amount,true)

			self.inside = false
		elseif btnp(4) and self.index == 1 then
			-- drop the loot
			loot:drop(self.amount,true)
			self.leave = true

			gameover =	true
		end

		-- handle the	index
		if	self.index > 1 then
			self.index = 0
		elseif self.index < 0 then
			self.index = 1
		end



	end

	return self.inside
end

function ship:draw()
	if self.inside then
		-- draw rect  8x8
		_x	= camera_offset.x + pix(3)
		_y = camera_offset.y + pix(8)
		_x2 = _x + pix(9)
		_y2 = _y + pix(4)



		rectfill(_x,_y,_x2,_y2,0)
		rect(_x,_y,_x2,_y2,7)

		_y	+= 6

		print("➡️",_x+pix(1),_y+pix(self.index),7)

		print("drop loot",_x+pix(3),_y,7)
		print("leave",_x+pix(3),_y+pix(1),7)
		print("press	❎ to exit",_x+2,_y+flr(pix(2)),7)
	end
	return self.inside
end
		























__gfx__
00000000000000000000900000440400000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000660606600444044064040406660606000406066000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070000000000000000000404044000000040a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000606660606066606064040046606660400466606000000000000000000000000000000000000000000000000000000000000000000000000000000000
00077000000000000000000000404940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007007006660666066606660604040406660664a0460666000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000004044044000000400400000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000660660606606606064004004660660400406606000000000000000000000000000000000000000000000000000000000000000000000000000000000
32222232322222323244443233333332223333323222223200000000000000000000000000000000000000000000000000000000000000000000000000000000
22323322223233222244442222333322233333322282332200000000000000000000000000000000000000000000000000000000000000000000000000000000
22223223222232232244442322444423333333332898322300000000000000000000000000000000000000000000000000000000000000000000000000000000
3232222232322222324444223244442233333333328222a200000000000000000000000000000000000000000000000000000000000000000000000000000000
22233232222999322244443222444432333333332223323200000000000000000000000000000000000000000000000000000000000000000000000000000000
22222222222949222244442222444422333333332222222200000000000000000000000000000000000000000000000000000000000000000000000000000000
32322233323999333444444332444433333333333a32223300000000000000000000000000000000000000000000000000000000000000000000000000000000
23223222232232224444444423444422333333322322322200000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22232232222322222322322200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
23223225454444545223223200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222244444444444422222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
32322544411111144452232300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222444155555514442222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
23325441516666151445233200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22224441561661651444222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
23232541566116651452323200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
32222441566116651452322300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22232541566116651442223200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
23224441566116651445222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22224541566116651444232200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22324441566116651454222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22225441566116651444223200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
23222441566116651452322200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
32232541566116651442222300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22322541511111151452232200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22224441100000011444222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
23225441100000011445223200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222444100000014442222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
23222544100000014452223200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
32232244100000014422322300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22222225550000555222222200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
22322322255555522232232200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000666066660000000000000008880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000666606116000000dd00000008c80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066600061160000dd99dd008888880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666000055550000dd99dd008998000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66660000056650000222222008998000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66600000055550000000000008888000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
06600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000070000000000000000000000000000000000000000000000000000000000000000000000000000000000
000aa000000aa0000000a000000aa000000000000700c07000000000000000000000000000000000000000000000000000000000000000000000000000000000
00a98a00000aa0000000a000000aa000000000000000007000000000000000000000000000000000000000000000000000000000000000000000000000000000
00a89a00000aa0000000a000000aa000000000000070700000000000000000000000000000000000000000000000000000000000000000000000000000000000
000aa000000aa0000000a000000aa000000000000700070000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000070007000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000707070700000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000660000501600005016000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00066000000110000001100007011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000000110000501100005011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01011010000110000001100007011010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00011000010110100501101005011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00500500005005000050050000005000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0101030303030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010103010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0106060606060606010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0106060606060606010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0406060606060606050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0106060606060606010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0106060606060606010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010102010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001010111010151010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000101014104041421014100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000101513105051521012100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001012106061621011100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000001010101010101510000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000101110101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010101010102010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
011200001616013160121601216022160001001616013160121601216011150111501215012150001001616013160121600010012160001002216013160121600010012160001002216013160121600010012160
001300001b150221601b160161601316012160121602216000100161601316012160121602216021160221601e1602116024160221601c1601616010160131601c16016160221601c1601f160221502315016160
0013000012160121602216000100161601316012160121602216021160221601e1602116024160161601316012160121602216000100161601316012160121602216021160221601e160211601e1601616000100
001300001316012160121602216000100161601316012160121602216021160221601e16021160241601616013160121601216016160001001616013160121601216022160001001616013160121601216022160
001300001b1601b1601e1602116024160161601316012160121602216000100161601316012160121602216021160221601e160211601e1601616013160121601216022160001001616013160121601216022160
00131b0021160221601e1602116024160161601316012160121602216000100221601c1601616010160131601c16016160221601c1601f160221502615024160221601c160191600110001100011000110001100
c91300001605500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c91300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b0552e0552f0552e0502e0502e0502e0502e0502e0502e0502e050
c91300002d0402d0402d0402d0402d0402d0402d0402d040300403004030040300403004030040300403004000000000000000000000000002a0452d0452a0452704027040270402704027040270402504025040
c913000025050250502805028050280501e0501f0501e0501f0501f0502e0502e0502e0502e0502e0502e0502e0502e0502e0502e0502d0502d0502d0502d0502d0502d0502d0502d05030050300503005030050
c91300003005030050300503005000000000000000000000000002a0552d0552a0552705027050270502705027050270502505025050250502505024050240502405021050210502105022050000000000000000
c91310002205500005220550000500005000051f055000050000522055000051f0552205500005000051605501400014000140001400014000140001400014000140001400014000140001400014000140001400
011300001165500605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605006050060500605
011300000c65500605006050060500605006050c655006050c6550060500605006050c6550060500605006050060500605006050c65500605006050c65500605006050060500605006050c655006050060500605
0113000000605006050c655006050c655006050060500605116550060500605006050c65500605006050060500605006050c655006050c655006050060500605116550060500605006050c655006050060500605
0113000000605006050c655006050c655006050060500605116550060511655006051165500605116550060500605006050c65500605006050060500605006050c655006050c6550060500605006051165500605
0113000000605006050c65500605006050060500605006050c655006050c655006050060500605116550060500605006050c65500605006050060500605006050c655006050c6550060500605006050c65500605
0113120000605006050c655006050c6550060500605006050060500605006050c65500605006050c65500605006050c6550160501605016050160501605016050160501605016050160501605016050160501605
001300000a150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a1500000009150
00130000007000a75009750007000a75000700007000a7500070009750007000a75009750007000a7500f750007000e7500d750007000a7500070009750007000b750007000a750007000070010750007000d750
0013000000700007000a75000700007000a750007000d750007000c750007000b7500070009750007000a7500070009750007000a75009750007000a75000700007000a7500070009750007000a7500975000700
001300000a1500f150000000e1500d150000000a1500000009150000000b150000000a1500000009150000000a15009150000000a15000000000000a1500000009150000000a15009150000000a1500f15000000
001300000e7500d750007000a7500070009750007000b750007000a7500070009750007000a75009750007000a75000700007000a7500070009750007000a75009750007000a7500f750007000e7500d75000700
001300000a7500070009750007000b750007000c7500070000700007000070000700007000a7500070009750007000a75009750007000a75000700007000a7500070009750007000a75009750007000a7500f750
00130000007000e7500d750007000a7500070009750007000b750007000a7500070009750007000a75009750007000a75000700007000a7500070009750007000a75009750007000a7500f750007000e7500d750
00130000007000a7500070009750007000b750007000a7500070009750007000a75009750007000a75000700007000a7500070009750007000a75009750007000a7500f750007000e7500d750007000a75000700
00131d0009750007000b750007000a750007000070000700007000a75000700007000a750007000070000700007000070000700007000a7500070000700007000a7500070000700007000a750017000170001700
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
01 00060c12
00 01070d13
00 02080e14
00 03090f15
00 050a1016
02 050b1117
00 4c404040
00 4d404040
00 4e404040
00 4f404040
00 50404040
04 51404040
00 58404040
00 59404040
04 5a404040

